/**
 * AI Assistant Module
 *
 * This module handles all interactions with the Gemini API for code generation,
 * fixing, and optimization.
 */
export class AIAssistant {
    constructor(editor) {
        this.editor = editor;
        this.apiKey = "AIzaSyDhuFGySigse5Yk8K2dMcQ8Jxv8_Je1bRA";
        this.apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${this.apiKey}`;
    }

    /**
     * Generates, fixes, or optimizes code using the Gemini API.
     * @param {string} prompt - The user's prompt or a predefined command.
     */
    async process(prompt) {
        const currentCode = this.editor.getValue();
        if (!prompt) {
            alert("Please enter a prompt for the AI.");
            return;
        }

        const requestBody = {
            contents: [{
                parts: [{
                    text: `${prompt}\n\nHTML Code:\n\`\`\`html\n${currentCode}\n\`\`\``
                }]
            }]
        };

        try {
            const response = await fetch(this.apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(requestBody)
            });

            if (!response.ok) {
                const errorBody = await response.json();
                console.error("API Error:", errorBody);
                throw new Error(`API request failed with status ${response.status}`);
            }

            const data = await response.json();
            if (data.candidates && data.candidates.length > 0) {
                const generatedText = data.candidates[0].content.parts[0].text;
                const codeBlock = generatedText.match(/```html\n([\s\S]*?)\n```/);
                if (codeBlock && codeBlock[1]) {
                    this.editor.setValue(codeBlock[1], -1);
                } else {
                    this.editor.setValue(generatedText, -1);
                }
            } else {
                throw new Error("No content generated by the AI.");
            }
        } catch (error) {
            console.error("AI Generation Error:", error);
            alert("Failed to generate code. Please check the console for details.");
        }
    }
}